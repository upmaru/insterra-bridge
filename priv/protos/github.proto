syntax = "proto3";

package insterra.protos.github;

import "accounts.proto";
import "responses.proto";
import "transitions.proto";
import "credentials.proto";

service Handler {
  rpc ListRepositories(Repository.ListRequest) returns (stream Repository) {}
  rpc GetRepository(Repository.GetRequest) returns (Repository.Response) {}
  rpc CreateRepository(Repository.CreateRequest) returns (Repository.Response) {}
  rpc TransitionRepository(Repository.TransitionRequest) returns (Repository.Response) {}
}

message Repository {
  message ListRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
  }

  message GetRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    int32 stack_id = 2 [json_name="stack_id"];
  }

  message CreateRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    accounts.UserReference user_reference = 2 [json_name="user_reference"];
    int32 instellar_github_installation_id = 3 [json_name="instellar_github_installation_id"];
    int32 stack_id = 4 [json_name="stack_id"];
    string name = 5;
    credentials.Token encrypted_token = 6;
  }

  message TransitionRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    accounts.UserReference user_reference = 2 [json_name="user_reference"];
    int32 id = 3;
    transitions.Event event = 4;
    credentials.Token encrypted_token = 5 [json_name="encrypted_token"];
  }

  message Response {
    responses.Status status = 1;
    Repository data = 3;
  }

  message Event{
    int32 id = 1;
    string name = 2;
    string inserted_at = 3 [json_name="inserted_at"];
    Repository resource = 4;
  }

  int32 id = 1;
  string name = 2;
  int32 uid = 3;
  string current_state = 4 [json_name="current_state"];
}