syntax = "proto3";

package insterra.protos.builders;

import "accounts.proto";
import "taxonomies.proto";
import "responses.proto";

service Handler {
  rpc ListPacks(Pack.ListRequest) returns (stream Pack) {}
  rpc GetPack(Pack.GetRequest) returns (Pack.Response) {}
  rpc CreatePackPreview(Preview.CreateRequest) returns (Preview.Response) {}
  rpc CreateChildPack(Pack.CreateRequest) returns (Pack.Response) {}
  rpc ListPackageVersions(Package.Version.ListRequest) returns (stream Package.Version) {}
}

message Dependency {
  int32 id = 1;
  int32 pack_id = 2 [json_name = "pack_id"];
  int32 package_id = 3 [json_name = "package_id"];
}


message Preview {
  message CreateRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    int32 pack_id = 2 [json_name = "pack_id"];
    string deployment_endpoint = 3 [json_name = "deployment_endpoint"];
  }

  message Block {
    enum Type {
      dependencies = 0;
      stack = 1;
      build = 2;
      run = 3;
      hook = 4;
      kits = 5;
    }

    Type section = 1;
    string description = 2;
    string content = 3;
  }

  message Response {
    responses.Status status = 1;
    Preview data = 2;
  }

  int32 pack_id = 1 [json_name = "pack_id"];
  repeated Block blocks = 2;
}

message Pack {
  enum Type {
    template = 0;
    builder = 1;
  }

  message GetRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    int32 instellar_package_id = 2 [json_name = "instellar_package_id"];
    Type type = 3;
  }

  message ListRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    string organization_name = 2 [json_name = "organization_name"];
    string visibility = 3;
    Type type = 4;
  }

  message CreateRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    int32 instellar_package_id = 2 [json_name = "instellar_package_id"];
    int32 parent_id = 3 [json_name = "parent_id"];
    int32 image_id = 4 [json_name = "image_id"];
    string name = 5;
    Type type = 7;
  }

  message Response {
    responses.Status status = 1;
    Pack data = 2;
  }

  int32 id = 1;
  Type type = 2;
  string name = 3;
  string visibility = 4;
  string description = 5;
  repeated taxonomies.Tag tags = 6;
  Dependency main_dependency = 7 [json_name = "main_dependency"];
}

message Image {
  int32 id = 1;
  string system = 2;
  string version = 3;
}

message Package {
  message Repository {
    int32 id = 1;
    string channel = 2;
    string architecture = 3;
    Image image = 4;
  }

  message Version {
    message ListRequest {
      int32 package_id = 1 [json_name = "package_id"];
    }

    int32 id = 1;
    string identifier = 2;
    Package package = 3;
    Repository repository = 4;
  }

  int32 id = 1;
  string name = 2;
}