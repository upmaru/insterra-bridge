syntax = "proto3";

package insterra.protos.blueprints;

import "accounts.proto";
import "descriptors.proto";
import "taxonomies.proto";
import "platforms.proto";
import "responses.proto";
import "transitions.proto";

service Handler {
  rpc PrepareConfiguration(Draft) returns (stream HydratedBlock) {}
  rpc CreateConfiguration(Draft) returns (Archive.Response) {}
  rpc GetStack(Stack.GetRequest) returns (Stack.Response) {}
  rpc TransitionStack(Stack.TransitionRequest) returns (Stack.Response) {}
  rpc ListStacks(Stack.ListRequest) returns (stream Stack) {}
  rpc CreateStack(Stack.CreateRequest) returns (Stack.Response) {}
  rpc UpdateStack(Stack.UpdateRequest) returns (Stack.Response) {}
  rpc ListPresets(Preset.ListRequest) returns (stream Preset) {}
  rpc ListComponents(Component.ListRequest) returns (stream Component) {}
  rpc UpdateComponent(Component.UpdateRequest) returns (Component.Response) {}
  rpc TransitionComponent(Component.TransitionRequest) returns (Component.Response) {}
  rpc CreateComponentReference(Component.Reference.CreateRequest) returns (Component.Reference.Response) {}
  rpc TransitionComponentReference(Component.Reference.TransitionRequest) returns (Component.Reference.Response) {}
}

message Draft {
  accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
  accounts.UserReference user_reference = 2 [json_name = "user_reference"];
  int32 stack_id = 3 [json_name = "stack_id"];
  bool original = 4;
}

message HydratedBlock {
  int32 id = 1;
  string name = 2;
  string uid = 3;
  int32 component_id = 4 [json_name = "component_id"];
  Component.Type component_type = 5 [json_name = "component_type"];
  int32 component_parent_id = 6 [json_name = "component_parent_id"];
  repeated int32 parent_referenced_parameter_ids = 7 [json_name = "parent_referenced_parameter_ids"];
  bytes attributes = 8;
}

message Archive {
  message Response {
    responses.Status status = 1;
    Archive data = 3;
  }

  message File {
    string name = 1;
    string content = 2;
  }

  string id = 1;
  repeated File files = 2;
}

message Component {
  enum Type {
    dependency = 0;
    inferred = 1;
  }

  message TransitionRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    accounts.UserReference user_reference = 2 [json_name = "user_reference"];
    int32 id = 3;
    transitions.Event event = 4;
  }

  message ListRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    int32 stack_id = 2 [json_name = "stack_id"];
  }

  message UpdateRequest{
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    accounts.UserReference user_reference = 2 [json_name = "user_reference"];
    int32 id = 3;
    bytes attributes = 4;
  }

  message Reference {
    message TransitionRequest {
      accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
      accounts.UserReference user_reference = 2 [json_name = "user_reference"];
      string provider = 3;
      string type = 4;
      string uid = 5;
      transitions.Event event = 6;
    }

    message CreateRequest {
      accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
      accounts.UserReference user_reference = 2 [json_name = "user_reference"];
      int32 component_id = 3 [json_name = "component_id"];
      string provider = 4;
      string type = 5;
      string uid = 6;
    }

    message Response {
      responses.Status status = 1;
      Reference data = 2;
    }

    int32 id = 1;
    string provider = 2;
    string type = 3;
    string uid = 4;
    string current_state = 5 [json_name = "current_state"];
    int32 component_id = 6 [json_name = "component_id"];
  }

  message Response {
    responses.Status status = 1;
    Component data = 2;
  }

  message Event {
    int32 id = 1;
    string name = 2;
    string inserted_at = 3 [json_name = "inserted_at"];
    Component resource = 4;
  }

  int32 id = 1;
  int32 stack_id = 2 [json_name = "stack_id"];
  Type type = 3;
  bytes attributes = 4;
  int32 preset_id = 5 [json_name = "preset_id"];
  Preset preset = 6;
  int32 parent_id = 7 [json_name = "parent_id"];
  string current_state = 8 [json_name = "current_state"];
  repeated string possible_events = 9 [json_name = "possible_events"];
  string registration = 10;
  Reference reference = 11;
  string updated_at = 12 [json_name = "updated_at"];
}

message ComponentParams {
  int32 id = 1;
  string uid = 2;
  int32 preset_id = 3 [json_name = "preset_id"];
  bytes attributes = 4;
  repeated ComponentParams children = 5;
}

message Stack {
  message TransitionRequest{
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    accounts.UserReference user_reference = 2 [json_name = "user_reference"];
    int32 id = 3;
    transitions.Event event = 4;
  }

  message GetRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    Type type = 2;
    int32 id = 3;
  }

  message ListRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    string organization_name = 2 [json_name = "organization_name"];
    string visibility = 3;
    repeated string states = 4;
    bool provisioned = 5;
    Type type = 6;
  }

  message CreateRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    accounts.UserReference user_reference = 2 [json_name = "user_reference"];
    Type type = 3;
    string name = 4;
    string description = 5;
    int32 parent_id = 6 [json_name = "parent_id"];
    repeated ComponentParams components = 7;
  }

  message UpdateRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name = "organization_reference"];
    accounts.UserReference user_reference = 2 [json_name = "user_reference"];
    int32 id = 3;
    Type type = 4;
    string name = 5;
    string description = 6;
    repeated ComponentParams components = 7;
  }

  message Response {
    responses.Status status = 1;
    Stack data = 2;
  }

  enum Type {
    template = 0;
    blueprint = 1;
  }

  int32 id = 1;
  Type type = 2;
  int32 parent_id = 3 [json_name = "parent_id"];
  string name = 4;
  string current_state = 5;
  repeated string possible_events = 6 [json_name = "possible_events"];
  string description = 7;
  repeated Component components = 8;
}

message Preset {
  message ListRequest {
    repeated int32 category_ids = 1 [json_name = "category_ids"];
  }

  int32 id = 1;
  string name = 2;
  platforms.Provider provider = 3;
  repeated int32 require_one_of_preset_ids = 4 [json_name = "require_one_of_preset_ids"];
  bytes attributes = 5;
  repeated taxonomies.Tag tags = 6;
  descriptors.Block block = 7;
}