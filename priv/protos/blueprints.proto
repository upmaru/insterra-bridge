syntax = "proto3";

package insterra.protos.blueprints;

import "accounts.proto";
import "descriptors.proto";
import "taxonomies.proto";
import "platforms.proto";
import "responses.proto";
import "transitions.proto";

service Handler {
  rpc GetStack(Stack.GetRequest) returns (Stack.Response) {}
  rpc TransitionStack(Stack.TransitionRequest) returns (Stack.Response) {}
  rpc ListStacks(Stack.ListRequest) returns (stream Stack) {}
  rpc CreateStack(Stack.CreateRequest) returns (Stack.Response) {}
  rpc UpdateStack(Stack.UpdateRequest) returns (Stack.Response) {}
  rpc ListPresets(Preset.ListRequest) returns (stream Preset) {}
  rpc UpdateComponent(Component.UpdateRequest) returns (Component.Response) {}
}

message Component {
  enum Type {
    dependency = 0;
    inferred = 1;
  }

  message UpdateRequest{
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    accounts.UserReference user_reference = 2 [json_name="user_reference"];
    int32 id = 3;
    bytes attributes = 4;
  }

  message Response {
    responses.Status status = 1;
    Component data = 2;
  }

  int32 id = 1;
  Type type = 2;
  bytes attributes = 3;
  int32 preset_id = 4;
  Preset preset = 5;
  int32 parent_id = 6;
}

message ComponentParams {
  int32 id = 1;
  string uid = 2;
  int32 preset_id = 3;
  bytes attributes = 4;
  repeated ComponentParams children = 5;
}

message Stack {
  message TransitionRequest{
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    accounts.UserReference user_reference = 2 [json_name="user_reference"];
    int32 id = 3;
    transitions.Event event = 4;
  }

  message GetRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    Type type = 2;
    int32 id = 3;
  }

  message ListRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    string organization_name = 2 [json_name="organization_name"];
    string visibility = 3;
    Type type = 4;
  }

  message CreateRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    accounts.UserReference user_reference = 2 [json_name="user_reference"];
    Type type = 3;
    string name = 4;
    string description = 5;
    int32 parent_id = 6 [json_name="parent_id"];
    repeated ComponentParams components = 7;
  }

  message UpdateRequest {
    accounts.OrganizationReference organization_reference = 1 [json_name="organization_reference"];
    accounts.UserReference user_reference = 2 [json_name="user_reference"];
    int32 id = 3;
    Type type = 4;
    string name = 5;
    string description = 6;
    repeated ComponentParams components = 7;
  }

  message Response {
    responses.Status status = 1;
    Stack data = 2;
  }

  enum Type {
    template = 0;
    blueprint = 1;
  }

  int32 id = 1;
  Type type = 2;
  string name = 3;
  string current_state = 5;
  repeated string possible_events = 6;
  string description = 7;
  repeated Component components = 8;
}

message Preset {
  message ListRequest {
    repeated int32 category_ids = 1 [json_name="category_ids"];
  }

  int32 id = 1;
  string name = 2;
  platforms.Provider provider = 3;
  repeated int32 require_one_of_preset_ids = 4;
  bytes attributes = 5;
  repeated taxonomies.Tag tags = 6;
  descriptors.Block block = 7;
}